# Build the kubeblocks lorry binaries

## docker buildx build injected build-args:
#BUILDPLATFORM — matches the current machine. (e.g. linux/amd64)
#BUILDOS — os component of BUILDPLATFORM, e.g. linux
#BUILDARCH — e.g. amd64, arm64, riscv64
#BUILDVARIANT — used to set build ARM variant, e.g. v7
#TARGETPLATFORM — The value set with --platform flag on build
#TARGETOS - OS component from --platform, e.g. linux
#TARGETARCH - Architecture from --platform, e.g. arm64
#TARGETVARIANT - used to set target ARM variant, e.g. v7

ARG GO_VERSION=1.20

FROM --platform=${BUILDPLATFORM} golang:${GO_VERSION} as builder
ARG TARGETOS
ARG TARGETARCH
ARG GOPROXY
#ARG GOPROXY=https://goproxy.cn
ARG LD_FLAGS="-s -w"

ENV GONOPROXY=github.com/apecloud
ENV GONOSUMDB=github.com/apecloud
ENV GOPRIVATE=github.com/apecloud
ENV GOPROXY=${GOPROXY}

WORKDIR /src

RUN --mount=type=bind,target=. \
    --mount=type=cache,target=/go/pkg/mod \
    go mod download

# Build
RUN --mount=type=bind,target=. \
    --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -ldflags="${LD_FLAGS}" -a -o /out/probe cmd/probe/main.go

RUN --mount=type=bind,target=. \
    --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -ldflags="${LD_FLAGS}" -a -o /out/sqlctl cmd/probe/sqlctl/main.go

FROM centos:8 as dist

RUN set -ex; \
    sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*; \
    sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*;

RUN set -eu; \
    . /etc/os-release; \
    { \
        echo '[wesql-server]'; \
        echo 'name=WeSQL Server'; \
        echo 'enabled=1'; \
        echo "baseurl=http://apecloud:apecloud@69.235.169.234:8088/centos/\$releasever/os/\$basearch"; \
        echo 'gpgcheck=0'; \
    } | tee /etc/yum.repos.d/wesql.repo

RUN set -eux; \
        yum install -y apecloud-xtrabackup-80 && \
        yum clean all && \
    rm -rf /etc/yum.repos.d/wesql.repo;

# copy lorry binaries
COPY config/probe config/probe
COPY --from=builder /out/probe /bin
COPY --from=builder /out/sqlctl /bin

USER 65532:65532
