apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-scripts
  labels:
    {{- include "redis.labels" . | nindent 4 }}
data:
  setup.sh: |
    #!/bin/sh
    set -ex
    # first get the primary pod information from the DownwardAPI annotation, if it does not exist, get the primary pod information from env
    primary=`cat /kb-podinfo/primary-pod`
    echo "downwardAPI gey primary=$primary" >> /etc/redis/.kb_set_up.log
    echo "KB_POD_NAME=$KB_POD_NAME" >> /etc/redis/.kb_set_up.log
    if [ -z "$primary" ]; then
      echo "downwardAPI primary info is empty, try to get KB_PRIMARY_POD_NAME env value." >> /etc/redis/.kb_set_up.log
      echo "KB_PRIMARY_POD_NAME=$KB_PRIMARY_POD_NAME" >> /etc/redis/.kb_set_up.log
      primary=$KB_PRIMARY_POD_NAME
    fi
    if [ "$primary" = "$KB_POD_NAME" ]; then
      echo "primary instance skip create a replication relationship."
      exit 0
    else
      primary_fqdn="$primary.$KB_CLUSTER_NAME-$KB_COMP_NAME-headless.$KB_NAMESPACE.svc"
      echo "primary_fqdn=$primary_fqdn" >> /etc/redis/.kb_set_up.log
      until redis-cli -h $primary_fqdn -p 6379 ping; do sleep 1; done
      redis-cli -h 127.0.0.1 -p 6379 replicaof $primary_fqdn 6379 || exit 1
    fi
  redis-start.sh: |
    {{- .Files.Get "scripts/redis7-start.sh.tpl" | nindent 4 }}
  redis-sentinel-setup.sh: |-
    {{- .Files.Get "scripts/redis-sentinel-setup.sh.tpl" | nindent 4 }}
  redis-sentinel-start.sh: |-
    {{- .Files.Get "scripts/redis-sentinel-start.sh.tpl" | nindent 4 }}
  redis-sentinel-ping.sh: |-
    #!/bin/sh
    set -ex
    response=$(
          timeout -s 3 $1 \
          redis-cli \
            -h localhost \
            -p 26379 \
            ping
        )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi