apiVersion: datachannel.kubeblocks.io/v1alpha1
kind: ChannelDefinition
metadata:
  labels:
    "clusterdefinition.kubeblocks.io/name": apecloud-mysql
  name: apecloud-mysql-channel
spec:
  type: KubeBlocks
  kubeblocksSetting:
    clusterDefinitionRef: apecloud-mysql
    expose:
      componentDefRef: mysql
      service:
        port: 3306
  source:
    kubeblocks:
      configureRequests:
        componentName: mysql
        configurations:
          - keys:
              - key: my.cnf
                parameters:
                  - key: log_bin
                    value: "mysql-bin"
                  - key: binlog_format
                    value: "row"
                  - key: binlog_row_image
                    value: "full"
            name: mysql-consensusset-config
      accountRequests:
        componentName: mysql
        accountName: kbchannelsource
      cluster:
        clusterDefinitionRef: connector
        clusterVersionRef: connector-2.2.4
        componentSpecs:
          - componentDefRef: connectors
            name: connectors
            replicas: 1
            resources:
        terminationPolicy: Delete
      extraEnvs:
        KB_CHANNEL_CONNECTOR_NAME: ${KB_CHANNEL_NAME}-${KB_CHANNEL_TYPE}
        KB_CHANNEL_CONFIG: |
          {
              "connector.class": "io.debezium.connector.mysql.MySqlConnector",
              "database.hostname": "${KB_CHANNEL_SOURCE_HOSTNAME}",
              "database.port": "${KB_CHANNEL_SOURCE_PORT}",
              "database.user": "${KB_CHANNEL_SOURCE_USER}",
              "database.password": "${KB_CHANNEL_SOURCE_PASSWORD}",
              "database.server.id": "${KB_CHANNEL_RANDOM_INT16}",
              "schema.history.internal.kafka.bootstrap.servers": "${KB_CHANNEL_SINK_HOSTNAME}:${KB_CHANNEL_SINK_PORT}",
              "schema.history.internal.kafka.topic": "${KB_CHANNEL_TOPOLOGY_NAME}_${KB_CHANNEL_NAME}_${KB_CHANNEL_TYPE}_history",
              "snapshot.mode": "initial",
              "table.include.list": "${KB_CHANNEL_SYNC_TABLE}",
              "topic.prefix": "${KB_CHANNEL_TOPOLOGY_NAME}-${KB_CHANNEL_NAME}"
          }
    syncObjEnvExpress:
      - name: sync_db
        metaTypeRequired:
          - Database
        metaTypeConnectSymbol: "."
        metaObjConnectSymbol: ","
      - name: sync_table
        metaTypeRequired:
          - Database
          - Table
        metaTypeConnectSymbol: "."
        metaObjConnectSymbol: ","
  sink:
    kubeblocks:
      accountRequests:
        componentName: mysql
        accountName: kbchannelsink
      cluster:
        clusterDefinitionRef: connector
        clusterVersionRef: connector-2.2.4
        componentSpecs:
          - componentDefRef: connectors
            name: connectors
            replicas: 1
            resources:
        terminationPolicy: Delete
      extraEnvs:
        KB_CHANNEL_CONNECTOR_NAME: ${KB_CHANNEL_NAME}-${KB_CHANNEL_TYPE}
        KB_CHANNEL_CONFIG: |
          {
              "auto.create":"false",
              "auto.evolve":"false",
              "connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
              "connection.url":"jdbc:mysql://${KB_CHANNEL_SINK_HOSTNAME}:${KB_CHANNEL_SINK_PORT}?ssl-mode=disabled",
              "connection.user":"${KB_CHANNEL_SINK_USER}",
              "connection.password":"${KB_CHANNEL_SINK_PASSWORD}",
              "delete.enabled":"true",
              "dialect.name":"MySqlDatabaseDialect",
              "insert.mode":"upsert",
              "pk.mode":"record_key",
              "topics":"${KB_CHANNEL_SYNC_TABLE}",
              "transforms":"dropPrefix,unwrap",
              "transforms.dropPrefix.regex":"^${KB_CHANNEL_TOPOLOGY_NAME}-${KB_CHANNEL_NAME}\\.(.*)",
              "transforms.dropPrefix.replacement":"$1",
              "transforms.dropPrefix.type":"org.apache.kafka.connect.transforms.RegexRouter",
              "transforms.unwrap.drop.tombstones":"false",
              "transforms.unwrap.type":"io.debezium.transforms.ExtractNewRecordState"
          }
    syncObjEnvExpress:
      - name: sync_db
        metaTypeRequired:
          - Database
        metaTypeConnectSymbol: "."
        metaObjConnectSymbol: ","
      - name: sync_table
        metaTypeRequired:
          - Database
          - Table
        metaTypeConnectSymbol: "."
        metaObjConnectSymbol: ","
        prefix: "${channelTopologyName}-${channelName}."
  topologyStructs:
    - dag
  isDefault: true