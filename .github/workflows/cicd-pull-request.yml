name: CICD-PULL-REQUEST

on:
  pull_request_review:
    types: [submitted]

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  trigger-mode:
    name: trigger mode
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    outputs:
      trigger-mode: ${{ steps.get_trigger_mode.outputs.trigger_mode }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          all_but_latest: true
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get trigger mode
        id: get_trigger_mode
        run: |
          TRIGGER_MODE=`bash .github/utils/utils.sh --type 6 \
              --branch-name "${{ github.event.pull_request.head.ref }}" \
              --base-commit "${{ github.event.pull_request.base.sha }}"`
          echo $TRIGGER_MODE
          echo trigger_mode=$TRIGGER_MODE >> $GITHUB_OUTPUT

  make-test:
    name: make test
    needs: trigger-mode
    if: contains(needs.trigger-mode.outputs.trigger-mode, '[test]')
    outputs:
      runner-name: ${{ steps.get_runner_name.outputs.runner_name }}
    runs-on: [ self-hosted, kubeblocks-runner ]
    steps:
      - uses: apecloud/checkout@main
      - name: make mod-vendor and lint
        run: |
          mkdir -p ./bin
          cp -r /go/bin/controller-gen ./bin/controller-gen
          cp -r /go/bin/setup-envtest ./bin/setup-envtest
          make mod-vendor lint

      - name: make test
        run: |
          make test

      - name: kill kube-apiserver and etcd
        id: get_runner_name
        if: ${{ always() }}
        run: |
          echo runner_name=${RUNNER_NAME} >> $GITHUB_OUTPUT
          bash .github/utils/utils.sh --type 8

  remove-runner:
    needs: [ trigger-mode, make-test ]
    runs-on: ubuntu-latest
    if: ${{ contains(needs.trigger-mode.outputs.trigger-mode, '[test]') && always() }}
    steps:
      - uses: actions/checkout@v3
      - name: remove runner
        run: |
          bash .github/utils/utils.sh --type 9 \
            --github-token ${{ env.GITHUB_TOKEN }} \
            --runner-name ${{ needs.make-test.outputs.runner-name }}

  check-image:
    name: check image
    needs: trigger-mode
    if: contains(needs.trigger-mode.outputs.trigger-mode, '[docker]')
    uses: apecloud/apecloud-cd/.github/workflows/release-image-check.yml@v0.1.2
    with:
      MAKE_OPS_PRE: "generate"
      MAKE_OPS: "build-manager-image"
      IMG: "apecloud/kubeblocks"
      VERSION: "check"
      GO_VERSION: "1.20"
      BUILDX_PLATFORMS: "linux/amd64"
      APECD_REF: "v0.1.2"
    secrets: inherit

  check-tools-image:
    name: check image
    needs: trigger-mode
    if: contains(needs.trigger-mode.outputs.trigger-mode, '[docker]')
    uses: apecloud/apecloud-cd/.github/workflows/release-image-check.yml@v0.1.2
    with:
      MAKE_OPS_PRE: "generate"
      MAKE_OPS: "build-tools-image"
      IMG: "apecloud/kubeblocks-tools"
      VERSION: "check"
      GO_VERSION: "1.20"
      BUILDX_PLATFORMS: "linux/amd64"
      APECD_REF: "v0.1.2"
    secrets: inherit

  check-helm:
    name: check helm
    needs: trigger-mode
    if: contains(needs.trigger-mode.outputs.trigger-mode, '[deploy]')
    uses: apecloud/apecloud-cd/.github/workflows/release-charts-check.yml@v0.1.4
    with:
      MAKE_OPS: "bump-chart-ver"
      VERSION: "v0.4.0-check"
      CHART_NAME: "kubeblocks"
      CHART_DIR: "deploy/helm"
      DEP_REPO: "delphic"
      APECD_REF: "v0.1.4"
    secrets: inherit
