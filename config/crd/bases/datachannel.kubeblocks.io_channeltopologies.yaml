---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: channeltopologies.datachannel.kubeblocks.io
spec:
  group: datachannel.kubeblocks.io
  names:
    categories:
    - kubeblocks
    kind: ChannelTopology
    listKind: ChannelTopologyList
    plural: channeltopologies
    shortNames:
    - cht
    singular: channeltopology
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: status
      jsonPath: .status.phase
      name: STATUS
      type: string
    - description: channelTotalCount
      jsonPath: .status.channelTotalCount
      name: CHANNEL-TOTAL
      type: string
    - description: channelEstablished
      jsonPath: .status.channelEstablished
      name: CHANNEL-ESTABLISHED
      type: string
    - description: channelWaitForBuilding
      jsonPath: .status.channelWaitForBuilding
      name: CHANNEL-WAIT-FOR-BUILDING
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ChannelTopology is the Schema for the channelTopology API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ChannelTopologySpec defines the desired state of Channel
            properties:
              channels:
                items:
                  properties:
                    excludeObjs:
                      items:
                        properties:
                          child:
                            x-kubernetes-preserve-unknown-fields: true
                          isAll:
                            type: boolean
                          mappingName:
                            type: string
                          name:
                            type: string
                          type:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    from:
                      properties:
                        channelDefinitionRef:
                          type: string
                        clusterNamespace:
                          type: string
                        clusterRef:
                          type: string
                        hubRef:
                          type: string
                      type: object
                    includeObjs:
                      items:
                        properties:
                          child:
                            x-kubernetes-preserve-unknown-fields: true
                          isAll:
                            type: boolean
                          mappingName:
                            type: string
                          name:
                            type: string
                          type:
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                    name:
                      type: string
                    to:
                      properties:
                        channelDefinitionRef:
                          type: string
                        clusterNamespace:
                          type: string
                        clusterRef:
                          type: string
                        hubRef:
                          type: string
                      type: object
                  type: object
                type: array
              description:
                description: Channel description.
                type: string
              hubs:
                items:
                  properties:
                    clusterRef:
                      type: string
                    limitPolicy:
                      properties:
                        bestEffect:
                          type: boolean
                        numLimit:
                          type: integer
                      type: object
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
                type: array
              settings:
                properties:
                  schedule:
                    properties:
                      affinity:
                        description: affinity is a group of affinity scheduling rules.
                        properties:
                          nodeLabels:
                            additionalProperties:
                              type: string
                            description: nodeLabels describes that pods must be scheduled
                              to the nodes with the specified node labels.
                            type: object
                          podAntiAffinity:
                            default: Preferred
                            description: podAntiAffinity describes the anti-affinity
                              level of pods within a component. Preferred means try
                              spread pods by `TopologyKeys`. Required means must spread
                              pods by `TopologyKeys`.
                            enum:
                            - Preferred
                            - Required
                            type: string
                          tenancy:
                            default: SharedNode
                            description: tenancy describes how pods are distributed
                              across node. SharedNode means multiple pods may share
                              the same node. DedicatedNode means each pod runs on
                              their own dedicated node.
                            enum:
                            - SharedNode
                            - DedicatedNode
                            type: string
                          topologyKeys:
                            description: topologyKey is the key of node labels. Nodes
                              that have a label with this key and identical values
                              are considered to be in the same topology. It's used
                              as the topology domain for pod anti-affinity and pod
                              spread constraint. Some well-known label keys, such
                              as "kubernetes.io/hostname" and "topology.kubernetes.io/zone"
                              are often used as TopologyKey, as well as any other
                              custom label key.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                        type: object
                      tolerations:
                        description: tolerations are attached to tolerate any taint
                          that matches the triple <key,value,effect> using the matching
                          operator <operator>.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                  topology:
                    properties:
                      buildingPolicy:
                        type: string
                      prepareTtlMinutes:
                        type: integer
                      topologyStruct:
                        type: string
                    type: object
                type: object
            required:
            - channels
            type: object
          status:
            description: ChannelTopologyStatus defines the observed state of ChannelTopology
            properties:
              channelEstablished:
                type: integer
              channelTotalCount:
                type: integer
              channelWaitForBuilding:
                type: integer
              message:
                type: string
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
